syntax = "proto3";
package walletrpc;

option go_package = "walletrpc";

message Credentials {
  string wallet_name = 1;
  string pass_phrase = 2;
}

message GenerateChainRequest {
  walletrpc.Credentials creds = 1;
  string key_addr = 2;
}

message GenerateChainResponse {
  string chain_id = 1;
}

message GenerateKeyRequest {
  walletrpc.Credentials creds = 1;
}

message GenerateKeyResponse {
  string key_addr = 1;
}

message GetTipRequest {
  walletrpc.Credentials creds = 1;
  string chain_id = 2;
}

message GetTipResponse {
  string tip = 1;
}

message ListChainIdsRequest {
  walletrpc.Credentials creds = 1;
}

message ListChainIdsResponse {
  repeated string chain_ids = 1;
}

message ListKeysRequest {
  walletrpc.Credentials creds = 1;
}

message ListKeysResponse {
  repeated string key_addrs = 1;
}

message SetOwnerRequest {
  walletrpc.Credentials creds = 1;
  string chain_id = 2;
  string key_addr = 3;
  repeated string new_owner_keys = 4;
}

message SetOwnerResponse {
  string tip = 1;
}

message SetDataRequest {
  walletrpc.Credentials creds = 1;
  string chain_id = 2;
  string key_addr = 3;
  string path = 4;
  string value = 5;
}

message SetDataResponse {
  string tip = 1;
}

message EstablishCoinRequest {
  walletrpc.Credentials creds = 1;
  string chain_id = 2;
  string key_addr = 3;
  string coin_name = 4;
  uint64 maximum = 5;
}

message EstablishCoinResponse {
  string tip = 1;
}

message MintCoinRequest {
  walletrpc.Credentials creds = 1;
  string chain_id = 2;
  string key_addr = 3;
  string coin_name = 4;
  uint64 amount = 5;
}

message MintCoinResponse {
  string tip = 1;
}

service WalletRPCService {
  rpc GenerateKey (walletrpc.GenerateKeyRequest) returns (walletrpc.GenerateKeyResponse);
  rpc CreateChain (walletrpc.GenerateChainRequest) returns (walletrpc.GenerateChainResponse);
  rpc GetTip (walletrpc.GetTipRequest) returns (walletrpc.GetTipResponse);
  rpc ListChainIds (walletrpc.ListChainIdsRequest) returns (walletrpc.ListChainIdsResponse);
  rpc ListKeys (walletrpc.ListKeysRequest) returns (walletrpc.ListKeysResponse);
  rpc SetOwner (walletrpc.SetOwnerRequest) returns (walletrpc.SetOwnerResponse);
  rpc SetData (walletrpc.SetDataRequest) returns (walletrpc.SetDataResponse);
  rpc EstablishCoin (walletrpc.EstablishCoinRequest) returns (walletrpc.EstablishCoinResponse);
  rpc MintCoin (walletrpc.MintCoinRequest) returns (walletrpc.MintCoinResponse);
}
